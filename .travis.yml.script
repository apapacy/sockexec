#!/bin/bash
set -e
set -x

MUSL_CROSS_MAKE_RELEASE=11
MUSL_CROSS_MAKE_SRC="https://github.com/just-containers/musl-cross-make/releases/download/v${MUSL_CROSS_MAKE_RELEASE}"
SKAWARE_VERSION=1.21.7
SKAWARE_SOURCE="https://github.com/just-containers/skaware/releases/download/v${SKAWARE_VERSION}"
MAKE_VERSION=4.2
AUXDIR=$(pwd)/aux

# bash3 (osx) can't iterate an associative array
target_list=(
'i486_linux_musl'
'x86_64_linux_musl'
'arm_linux_musleabihf'
'aarch64_linux_musl'
'x86_64_apple_darwin'
)

targetname__i486_linux_musl='i486-linux-musl'
targetname__x86_64_linux_musl='x86_64-linux-musl'
targetname__arm_linux_musleabihf='arm-linux-musleabihf'
targetname__aarch64_linux_musl='aarch64-linux-musl'
targetname__x86_64_apple_darwin='x86_64-apple-darwin'

target__i486_linux_musl='x86'
target__x86_64_linux_musl='amd64'
target__arm_linux_musleabihf='armhf'
target__aarch64_linux_musl='aarch64'
target__x86_64_apple_darwin='darwin'

staticflags__i486_linux_musl='-static'
staticflags__x86_64_linux_musl='-static'
staticflags__arm_linux_musleabihf='-static'
staticflags__aarch64_linux_musl='-static'
staticflags__x86_64_apple_darwin=''

mkdir -p aux

(
cd aux

# download manifests
rm -f manifest.txt musl-cross-manifest.txt skaware-manifest.txt

wget -nv "${MUSL_CROSS_MAKE_SRC}/gcc-7.3.0-manifest.txt"
cp -a gcc-7.3.0-manifest.txt musl-cross-manifest.txt
rm -f gcc-7.3.0-manifest.txt

wget -nv "${SKAWARE_SOURCE}/manifest.txt"
cp -a manifest.txt skaware-manifest.txt
rm -f manifest.txt

wget -nv "https://ftp.gnu.org/gnu/make/make-${MAKE_VERSION}.tar.bz2"
tar xf make-${MAKE_VERSION}.tar.bz2
cd make-${MAKE_VERSION}
./configure --prefix=
make
make DESTDIR="${AUXDIR}" install

)

while read -r line; do
    key=$(echo "${line}" | cut -d"=" -f1)
    value=$(echo "${line}" | cut -d"=" -f2)
    case "${key}" in
        musl|gcc) printf -v "versions__${key}" "%s" "$value" ;;
    esac
done < aux/musl-cross-manifest.txt

while read -r line; do
    key=$(echo "${line}" | cut -d"=" -f1)
    value=$(echo "${line}" | cut -d"=" -f2)
    case "${key}" in
        skalibs) printf -v "versions__${key}" "%s" "$value" ;;
    esac
done < aux/skaware-manifest.txt


if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then

(
cd aux

# download gcc and skalibs
for target_key in "${target_list[@]}"; do
    target="targetname__${target_key}"
    target="${!target}"
    targetshort="target__${target_key}"
    targetshort="${!targetshort}"

    if [[ "${target}" == *"linux"* ]] ; then
        mkdir -p gcc-${target}
        mkdir -p skalibs-${target}

        wget -N "${MUSL_CROSS_MAKE_SRC}/gcc-${versions__gcc}-${target}.tar.xz"
        wget -N "${SKAWARE_SOURCE}/skalibs-${versions__skalibs}-linux-${targetshort}-dev.tar.gz"
        tar xf "gcc-${versions__gcc}-${target}.tar.xz" -C "gcc-${target}"
        tar xf "skalibs-${versions__skalibs}-linux-${targetshort}-dev.tar.gz" -C "skalibs-${target}"
    fi
done
)

fi

if [[ "$TRAVIS_OS_NAME" == "osx" ]] ; then
    (
    cd aux
    mkdir -p "gcc-x86_64-apple-darwin/bin"
    skadir="$(pwd)/skalibs-x86_64-apple-darwin"
    wget "https://skarnet.org/software/skalibs/skalibs-${versions__skalibs}.tar.gz"
    tar xf "skalibs-${versions__skalibs}.tar.gz"
        (
        cd skalibs-${versions__skalibs}
        ./configure \
          --libdir=/usr/lib \
          --enable-static \
          --disable-shared \
          --datadir=/etc
        ${AUXDIR}/bin/make
        ${AUXDIR}/bin/make DESTDIR="${skadir}" install
        )
    )
fi


mkdir -p dist

# build
for target_key in "${target_list[@]}"; do
    target="targetname__${target_key}"
    target="${!target}"
    targetshort="target__${target_key}"
    targetshort="${!targetshort}"
    staticflags="staticflags__${target_key}"
    staticflags="${!staticflags}"
    static_libc=

    if [[ "$TRAVIS_OS_NAME" == "linux" ]] ; then
      static_libc="--enable-static-libc"
    fi

    if [[ -d "aux/gcc-${target}" ]] ; then
        ${AUXDIR}/bin/make distclean || true
        rm -rf dist/${target}
        rm -f dist/sockexec-${target}.tar.gz
        mkdir -p dist/${target}/bin
        mkdir -p dist/${target}/share/doc/sockexec
        mkdir -p dist/${target}/src/sockexec
        CC="${AUXDIR}/gcc-${target}/bin/${target}-gcc" \
        CFLAGS="-g0 -Os" \
        LDFLAGS="-s" \
	PATH="${AUXDIR}/bin:${AUXDIR}/gcc-${target}/bin:$PATH" ./configure \
          --with-include="${AUXDIR}/skalibs-${target}/usr/include" \
          --with-lib="${AUXDIR}/skalibs-${target}/usr/lib" \
          --with-sysdeps="${AUXDIR}/skalibs-${target}/usr/lib/skalibs/sysdeps/" \
          --enable-allstatic \
          $static_libc \
          --enable-all-pic
	PATH="${AUXDIR}/bin:${AUXDIR}/gcc-${target}/bin:$PATH" make
        
        cp sockexec dist/${target}/bin/sockexec
        cp sockexec.client dist/${target}/bin/sockexec.client

        ${AUXDIR}/bin/make distclean

        cp -a LICENSE dist/${target}/share/doc/sockexec/
        cp -a LICENSE.skalibs dist/${target}/share/doc/sockexec/
        cp -a README.md dist/${target}/share/doc/sockexec/
        cp -r examples dist/${target}/share/doc/sockexec/

        cp -a .gitignore dist/${target}/src/sockexec/
        cp -a .travis.* dist/${target}/src/sockexec/
        cp -a LICENSE* dist/${target}/src/sockexec/
        cp -a Makefile dist/${target}/src/sockexec/
        cp -a README.md dist/${target}/src/sockexec/
        cp -a examples dist/${target}/src/sockexec/
        cp -a src dist/${target}/src/sockexec/

        tar czf dist/sockexec-${target}.tar.gz -C dist/${target} .
    fi
done

if [[ "$TRAVIS_OS_NAME" == "linux" ]] ; then
  releasemsg=""
  releasemsg+="Built using \`musl-${versions__musl}\` and \`skalibs-${versions__skalibs}\`\n"
  
  echo -e ${releasemsg} > dist/release.md
fi

